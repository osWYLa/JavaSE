# Synchronized 同步
## 位置
1. 同步代码块
```$xslt
synchronized(对象){
//synchronized 可以视为得到对象的监视权（读锁是原子操作）
//后面接需要被同步（上锁）的代码块
}
```
2. 放在方法声明中，表示整个方法为同步方法（线程安全？）
```$xslt
public synchronized void show(String name){
//接需要被同步（上锁）的代码块
}
```
## 互斥锁
1. java 中引入了对象互斥锁的概念，保证共享数据操作的完整性；
2. 每个对象都对应于一个可称为“互斥锁”的标记，这个标记用来保证在任意时刻，只能有一个线程访问该对象；
3. 使用关键字synchronized来与互斥锁联系。当某个对象使用synchronized修饰时，表明该对象在任意时刻只能由一个线程访问；
4. 同步的局限性：效率降低
5. 同步方法（非静态）的锁为this;
6. 同步方法（静态）的锁为当前类本身
